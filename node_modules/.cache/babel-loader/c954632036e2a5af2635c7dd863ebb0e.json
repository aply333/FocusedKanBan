{"ast":null,"code":"import { actionTypes } from \"../actions/actionTypes\";\nimport { initialAccount } from \"./initialStore\";\n\nconst accountStore = (state = initialAccount, action) => {\n  switch (action.type) {\n    case actionTypes.POST_LOGIN_START:\n      return { ...state,\n        accountFetch: true,\n        accountError: \"\"\n      };\n\n    case actionTypes.POST_LOGIN_SUCCESS:\n      {\n        return { ...state,\n          accountFetch: false,\n          accountData: action.payload\n        };\n      }\n\n    case actionTypes.POST_LOGIN_FAIL:\n      {\n        return { ...state,\n          accountFetch: false,\n          accountError: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default accountStore;","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/FocusedKanban/src/redux/reducers/accountStore.js"],"names":["actionTypes","initialAccount","accountStore","state","action","type","POST_LOGIN_START","accountFetch","accountError","POST_LOGIN_SUCCESS","accountData","payload","POST_LOGIN_FAIL"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AACA,SAASC,cAAT,QAA+B,gBAA/B;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGF,cAAT,EAAyBG,MAAzB,KAAoC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,WAAW,CAACM,gBAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,YAAY,EAAE,IAFT;AAGLC,QAAAA,YAAY,EAAE;AAHT,OAAP;;AAKF,SAAKR,WAAW,CAACS,kBAAjB;AAAqC;AACnC,eAAO,EACL,GAAGN,KADE;AAELI,UAAAA,YAAY,EAAE,KAFT;AAGLG,UAAAA,WAAW,EAAEN,MAAM,CAACO;AAHf,SAAP;AAKD;;AACD,SAAKX,WAAW,CAACY,eAAjB;AAAkC;AAChC,eAAO,EACL,GAAGT,KADE;AAELI,UAAAA,YAAY,EAAE,KAFT;AAGLC,UAAAA,YAAY,EAAEJ,MAAM,CAACO;AAHhB,SAAP;AAKD;;AACD;AACE,aAAOR,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,eAAeD,YAAf","sourcesContent":["import { actionTypes } from \"../actions/actionTypes\";\nimport { initialAccount } from \"./initialStore\";\n\nconst accountStore = (state = initialAccount, action) => {\n  switch (action.type) {\n    case actionTypes.POST_LOGIN_START:\n      return {\n        ...state,\n        accountFetch: true,\n        accountError: \"\",\n      };\n    case actionTypes.POST_LOGIN_SUCCESS: {\n      return {\n        ...state,\n        accountFetch: false,\n        accountData: action.payload,\n      };\n    }\n    case actionTypes.POST_LOGIN_FAIL: {\n      return {\n        ...state,\n        accountFetch: false,\n        accountError: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default accountStore;\n"]},"metadata":{},"sourceType":"module"}