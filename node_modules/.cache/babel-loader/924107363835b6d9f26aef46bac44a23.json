{"ast":null,"code":"import { axiosAuth } from \"../../accountRoutes/components/auth/axiosAuth\";\nimport { actionTypes } from \"./actionTypes\";\nconst rootUrl = \"http://localhost:5000/\";\nconst backendTargert = \"focusedKanban\";\nexport const getUserBoards = userId => dispatch => {\n  dispatch({\n    type: actionTypes.GET_BOARDS_START\n  });\n  axiosAuth().get(`${rootUrl}${backendTargert}/boards/userboards/${userId}`).then(res => {\n    dispatch({\n      type: actionTypes.GET_BOARDS_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: actionTypes.GET_BOARDS_FAIL,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/FocusedKanban/src/redux/actions/dashActions.js"],"names":["axiosAuth","actionTypes","rootUrl","backendTargert","getUserBoards","userId","dispatch","type","GET_BOARDS_START","get","then","res","GET_BOARDS_SUCCESS","payload","data","catch","err","GET_BOARDS_FAIL"],"mappings":"AAAA,SAASA,SAAT,QAA0B,+CAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,MAAMC,OAAO,GAAG,wBAAhB;AACA,MAAMC,cAAc,GAAG,eAAvB;AAEA,OAAO,MAAMC,aAAa,GAAIC,MAAD,IAAaC,QAAD,IAAc;AACnDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEN,WAAW,CAACO;AAAnB,GAAD,CAAR;AACAR,EAAAA,SAAS,GACJS,GADL,CACU,GAAEP,OAAQ,GAAEC,cAAe,sBAAqBE,MAAO,EADjE,EAEKK,IAFL,CAEWC,GAAD,IAAS;AACXL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,WAAW,CAACW,kBADb;AAELC,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GAPL,EAQKC,KARL,CAQYC,GAAD,IAAO;AACVV,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,WAAW,CAACgB,eADb;AAELJ,MAAAA,OAAO,EAAEG;AAFJ,KAAD,CAAR;AAIH,GAbL;AAcH,CAhBM","sourcesContent":["import { axiosAuth } from \"../../accountRoutes/components/auth/axiosAuth\";\nimport { actionTypes } from \"./actionTypes\";\n\nconst rootUrl = \"http://localhost:5000/\";\nconst backendTargert = \"focusedKanban\";\n\nexport const getUserBoards = (userId) => (dispatch) => {\n    dispatch({type: actionTypes.GET_BOARDS_START})\n    axiosAuth()\n        .get(`${rootUrl}${backendTargert}/boards/userboards/${userId}`)\n        .then((res) => {\n            dispatch({\n                type: actionTypes.GET_BOARDS_SUCCESS,\n                payload: res.data\n            })\n        })\n        .catch((err)=>{\n            dispatch({\n                type: actionTypes.GET_BOARDS_FAIL,\n                payload: err\n            })\n        })\n}"]},"metadata":{},"sourceType":"module"}