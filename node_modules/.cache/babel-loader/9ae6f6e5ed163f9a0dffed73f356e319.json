{"ast":null,"code":"var _jsxFileName = \"/Users/aply/Documents/SelfStudy/FocusedKanban/src/components/col.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { ITEM_TYPES } from \"../constants/itemTypes\";\nimport InnerColumn from \"./subComponents/innerCol\";\nimport PopUpMenu from \"./subComponents/popUpMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Col = ({\n  data,\n  columnId,\n  newCard,\n  setDragId,\n  moveCard,\n  moveColumn\n}) => {\n  _s();\n\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      type: ITEM_TYPES.COLUMN\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: ITEM_TYPES.COLUMN,\n    drop: () => {\n      moveColumn(columnId);\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n  const [cardMenu, setCardMenu] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drag,\n    onMouseEnter: () => {\n      setDragId([columnId, 0, \"col\"]);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: drop,\n      style: {\n        marginRight: \"1rem\",\n        minWidth: \"17rem\",\n        transition: \"all ease 0.75s\",\n        marginLeft: isOver ? \"5rem\" : null\n      },\n      children: [/*#__PURE__*/_jsxDEV(InnerColumn, {\n        moveCard: moveCard,\n        columnId: columnId,\n        data: data,\n        setDragId: setDragId,\n        setCardMenu: setCardMenu,\n        isDragging: isDragging\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), cardMenu === true ? /*#__PURE__*/_jsxDEV(PopUpMenu, {\n        title: \"Add Card\",\n        popStateHandler: setCardMenu,\n        stateHandler: newCard,\n        columnId: columnId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Col, \"GEO2nkmQ5YmTl84MDOotHUl2dYs=\", false, function () {\n  return [useDrag, useDrop];\n});\n\n_c = Col;\nexport default Col;\n\nvar _c;\n\n$RefreshReg$(_c, \"Col\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/FocusedKanban/src/components/col.jsx"],"names":["React","useState","useDrag","useDrop","ITEM_TYPES","InnerColumn","PopUpMenu","Col","data","columnId","newCard","setDragId","moveCard","moveColumn","isDragging","drag","item","type","COLUMN","collect","monitor","isOver","drop","accept","cardMenu","setCardMenu","marginRight","minWidth","transition","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA,SAA3B;AAAsCC,EAAAA,QAAtC;AAAgDC,EAAAA;AAAhD,CAAD,KAAkE;AAAA;;AAC5E,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,IAAyBb,OAAO,CAAC;AACrCc,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAEb,UAAU,CAACc;AAAnB,KAD+B;AAErCC,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACrBN,MAAAA,UAAU,EAAE,CAAC,CAACM,OAAO,CAACN,UAAR;AADO,KAAd;AAF4B,GAAD,CAAtC;AAOA,QAAM,CAAC;AAAEO,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBnB,OAAO,CAAC;AACjCoB,IAAAA,MAAM,EAAEnB,UAAU,CAACc,MADc;AAEjCI,IAAAA,IAAI,EAAE,MAAM;AAACT,MAAAA,UAAU,CAACJ,QAAD,CAAV;AAAqB,KAFD;AAGjCU,IAAAA,OAAO,EAAGC,OAAD,KAAc;AAAEC,MAAAA,MAAM,EAAE,CAAC,CAACD,OAAO,CAACC,MAAR;AAAZ,KAAd;AAHwB,GAAD,CAAlC;AAMA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,KAAD,CAAxC;AAEA,sBACE;AACE,IAAA,GAAG,EAAEc,IADP;AAEE,IAAA,YAAY,EAAE,MAAM;AAClBJ,MAAAA,SAAS,CAAC,CAACF,QAAD,EAAW,CAAX,EAAc,KAAd,CAAD,CAAT;AACD,KAJH;AAAA,2BAME;AACE,MAAA,GAAG,EAAEa,IADP;AAEE,MAAA,KAAK,EAAE;AACLI,QAAAA,WAAW,EAAE,MADR;AAELC,QAAAA,QAAQ,EAAE,OAFL;AAGLC,QAAAA,UAAU,EAAE,gBAHP;AAILC,QAAAA,UAAU,EAAER,MAAM,GAAG,MAAH,GAAY;AAJzB,OAFT;AAAA,8BASE,QAAC,WAAD;AACE,QAAA,QAAQ,EAAET,QADZ;AAEE,QAAA,QAAQ,EAAEH,QAFZ;AAGE,QAAA,IAAI,EAAED,IAHR;AAIE,QAAA,SAAS,EAAEG,SAJb;AAKE,QAAA,WAAW,EAAEc,WALf;AAME,QAAA,UAAU,EAAEX;AANd;AAAA;AAAA;AAAA;AAAA,cATF,EAkBGU,QAAQ,KAAK,IAAb,gBACC,QAAC,SAAD;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,eAAe,EAAEC,WAFnB;AAGE,QAAA,YAAY,EAAEf,OAHhB;AAIE,QAAA,QAAQ,EAAED;AAJZ;AAAA;AAAA;AAAA;AAAA,cADD,GAOG,IAzBN;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CApDD;;GAAMF,G;UAC2BL,O,EAOJC,O;;;KARvBI,G;AAsDN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { ITEM_TYPES } from \"../constants/itemTypes\";\nimport InnerColumn from \"./subComponents/innerCol\";\nimport PopUpMenu from \"./subComponents/popUpMenu\";\n\nconst Col = ({ data, columnId, newCard, setDragId, moveCard, moveColumn }) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ITEM_TYPES.COLUMN },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  const [{ isOver }, drop] = useDrop({\n    accept: ITEM_TYPES.COLUMN,\n    drop: () => {moveColumn(columnId)},\n    collect: (monitor) => ({ isOver: !!monitor.isOver() }),\n  });\n\n  const [cardMenu, setCardMenu] = useState(false);\n\n  return (\n    <div\n      ref={drag}\n      onMouseEnter={() => {\n        setDragId([columnId, 0, \"col\"]);\n      }}\n    >\n      <div\n        ref={drop}\n        style={{\n          marginRight: \"1rem\",\n          minWidth: \"17rem\",\n          transition: \"all ease 0.75s\",\n          marginLeft: isOver ? \"5rem\" : null,\n        }}\n      >\n        <InnerColumn\n          moveCard={moveCard}\n          columnId={columnId}\n          data={data}\n          setDragId={setDragId}\n          setCardMenu={setCardMenu}\n          isDragging={isDragging}\n        />\n\n        {cardMenu === true ? (\n          <PopUpMenu\n            title=\"Add Card\"\n            popStateHandler={setCardMenu}\n            stateHandler={newCard}\n            columnId={columnId}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Col;\n"]},"metadata":{},"sourceType":"module"}