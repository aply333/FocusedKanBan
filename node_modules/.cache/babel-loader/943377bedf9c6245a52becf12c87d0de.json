{"ast":null,"code":"var _jsxFileName = \"/Users/aply/Documents/SelfStudy/FocusedKanban/src/accountRoutes/board/innerBoardComponents/column.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport Colors from \"../../../assets/colors\";\nimport { ITEM_TYPES } from \"../../../constants/itemTypes\";\nimport { boardStyles } from \"../boardStyles\";\nimport Card from \"./card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Column({\n  title,\n  cards\n}) {\n  _s();\n\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      type: ITEM_TYPES.COLUMN\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: ITEM_TYPES.CARD,\n    drop: () => {\n      console.log(\"was dropped\");\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n  const [hoverState, setHoverState] = useState(false);\n  const [containerStyle, setContainerStyle] = useState(boardStyles.column.container);\n  useEffect(() => {\n    if (hoverState) {\n      setContainerStyle({ ...boardStyles.column.container,\n        boxShadow: `4px 4px 12px ${Colors.offWhite}`,\n        backgroundColor: Colors.offWhite\n      });\n    } else {\n      setContainerStyle(boardStyles.column.container);\n    }\n  }, [hoverState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    ref: drag,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: boardStyles.column.header,\n      onMouseEnter: () => {\n        setHoverState(true);\n      },\n      onMouseLeave: () => {\n        setHoverState(false);\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: boardStyles.column.cardContainer,\n      ref: drop,\n      children: cards.length > 0 ? cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 49\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Column, \"ryXzDTUKwn7++kUDp7I3QBkDhIs=\", false, function () {\n  return [useDrag, useDrop];\n});\n\n_c = Column;\nexport default Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/FocusedKanban/src/accountRoutes/board/innerBoardComponents/column.jsx"],"names":["useEffect","useState","useDrag","useDrop","Colors","ITEM_TYPES","boardStyles","Card","Column","title","cards","isDragging","drag","item","type","COLUMN","collect","monitor","isOver","drop","accept","CARD","console","log","hoverState","setHoverState","containerStyle","setContainerStyle","column","container","boxShadow","offWhite","backgroundColor","header","cardContainer","length","map","card"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAhB,EAAkC;AAAA;;AAChC,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,IAAyBV,OAAO,CAAC;AACrCW,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAET,UAAU,CAACU;AAAnB,KAD+B;AAErCC,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACrBN,MAAAA,UAAU,EAAE,CAAC,CAACM,OAAO,CAACN,UAAR;AADO,KAAd;AAF4B,GAAD,CAAtC;AAOA,QAAM,CAAC;AAACO,IAAAA;AAAD,GAAD,EAAWC,IAAX,IAAmBhB,OAAO,CAAC;AAC7BiB,IAAAA,MAAM,EAAEf,UAAU,CAACgB,IADU;AAE7BF,IAAAA,IAAI,EAAE,MAAM;AAACG,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAA2B,KAFX;AAG7BP,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACnBC,MAAAA,MAAM,EAAE,CAAC,CAACD,OAAO,CAACC,MAAR;AADS,KAAd;AAHoB,GAAD,CAAhC;AAQA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACyB,cAAD,EAAiBC,iBAAjB,IAAsC1B,QAAQ,CAClDK,WAAW,CAACsB,MAAZ,CAAmBC,SAD+B,CAApD;AAGA7B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,UAAJ,EAAgB;AACdG,MAAAA,iBAAiB,CAAC,EAChB,GAAGrB,WAAW,CAACsB,MAAZ,CAAmBC,SADN;AAEhBC,QAAAA,SAAS,EAAG,gBAAe1B,MAAM,CAAC2B,QAAS,EAF3B;AAGhBC,QAAAA,eAAe,EAAE5B,MAAM,CAAC2B;AAHR,OAAD,CAAjB;AAKD,KAND,MAMO;AACLJ,MAAAA,iBAAiB,CAACrB,WAAW,CAACsB,MAAZ,CAAmBC,SAApB,CAAjB;AACD;AACF,GAVQ,EAUN,CAACL,UAAD,CAVM,CAAT;AAWA,sBACE;AAAK,IAAA,KAAK,EAAEE,cAAZ;AAA4B,IAAA,GAAG,EAAEd,IAAjC;AAAA,4BACE;AACE,MAAA,KAAK,EAAEN,WAAW,CAACsB,MAAZ,CAAmBK,MAD5B;AAEE,MAAA,YAAY,EAAE,MAAM;AAClBR,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAJH;AAKE,MAAA,YAAY,EAAE,MAAM;AAClBA,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAPH;AAAA,gBASGhB;AATH;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,KAAK,EAAEH,WAAW,CAACsB,MAAZ,CAAmBM,aAA/B;AAA8C,MAAA,GAAG,EAAEf,IAAnD;AAAA,gBACGT,KAAK,CAACyB,MAAN,GAAe,CAAf,GAAmBzB,KAAK,CAAC0B,GAAN,CAAWC,IAAD,iBAAU,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cAApB,CAAnB,GAA+D;AADlE;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAjDQ7B,M;UACwBN,O,EAONC,O;;;KARlBK,M;AAmDT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport Colors from \"../../../assets/colors\";\nimport { ITEM_TYPES } from \"../../../constants/itemTypes\";\nimport { boardStyles } from \"../boardStyles\";\nimport Card from \"./card\";\n\nfunction Column({ title, cards }) {\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ITEM_TYPES.COLUMN },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  const [{isOver}, drop] = useDrop({\n      accept: ITEM_TYPES.CARD,\n      drop: () => {console.log(\"was dropped\")},\n      collect: (monitor) => ({\n          isOver: !!monitor.isOver()\n      })\n  })\n\n  const [hoverState, setHoverState] = useState(false);\n  const [containerStyle, setContainerStyle] = useState(\n    boardStyles.column.container\n  );\n  useEffect(() => {\n    if (hoverState) {\n      setContainerStyle({\n        ...boardStyles.column.container,\n        boxShadow: `4px 4px 12px ${Colors.offWhite}`,\n        backgroundColor: Colors.offWhite,\n      });\n    } else {\n      setContainerStyle(boardStyles.column.container);\n    }\n  }, [hoverState]);\n  return (\n    <div style={containerStyle} ref={drag}>\n      <h1\n        style={boardStyles.column.header}\n        onMouseEnter={() => {\n          setHoverState(true);\n        }}\n        onMouseLeave={() => {\n          setHoverState(false);\n        }}\n      >\n        {title}\n      </h1>\n      <div style={boardStyles.column.cardContainer} ref={drop}>\n        {cards.length > 0 ? cards.map((card) => <Card card={card} />) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}