{"ast":null,"code":"var _jsxFileName = \"/Users/aply/Documents/SelfStudy/FocusedKanban/src/components/subComponents/innerCol.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { ITEM_TYPES } from \"../../constants/itemTypes\";\nimport Card from \"../card\";\nimport Colors from \"../../assets/colors\";\nimport \"../styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InnerColumn = ({\n  moveCard,\n  columnId,\n  data,\n  setDragId,\n  setCardMenu,\n  isDragging\n}) => {\n  _s();\n\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: ITEM_TYPES.CARD,\n    drop: () => {\n      moveCard(columnId);\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: \"innerColumn\",\n    style: {\n      backgroundColor: isOver ? Colors.base : Colors.white,\n      filter: isDragging ? \"blur(1px)\" : null,\n      border: `1px solid ${Colors.light}`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columnHeader\",\n      style: {\n        backgroundColor: isOver ? Colors.dark_accent : Colors.base\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: Colors.white\n        },\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addButton\",\n        style: {\n          transform: \"scale(0.75)\",\n          marginTop: \"0.025rem\"\n        },\n        onClick: e => {\n          e.preventDefault();\n          setCardMenu(true);\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), data.cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      cardId: card.id,\n      data: card,\n      setDragId: setDragId,\n      columnId: columnId\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InnerColumn, \"9166pYLrZ/JzF75YDim8ZjfICTM=\", false, function () {\n  return [useDrop];\n});\n\n_c = InnerColumn;\nexport default InnerColumn;\n\nvar _c;\n\n$RefreshReg$(_c, \"InnerColumn\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/FocusedKanban/src/components/subComponents/innerCol.jsx"],"names":["React","useDrop","ITEM_TYPES","Card","Colors","InnerColumn","moveCard","columnId","data","setDragId","setCardMenu","isDragging","isOver","drop","accept","CARD","collect","monitor","backgroundColor","base","white","filter","border","light","dark_accent","color","title","transform","marginTop","e","preventDefault","cards","map","card","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,eAAP;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,QAFmB;AAGnBC,EAAAA,IAHmB;AAInBC,EAAAA,SAJmB;AAKnBC,EAAAA,WALmB;AAMnBC,EAAAA;AANmB,CAAD,KAOd;AAAA;;AACJ,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBZ,OAAO,CAAC;AACjCa,IAAAA,MAAM,EAAEZ,UAAU,CAACa,IADc;AAEjCF,IAAAA,IAAI,EAAE,MAAM;AACVP,MAAAA,QAAQ,CAACC,QAAD,CAAR;AACD,KAJgC;AAKjCS,IAAAA,OAAO,EAAGC,OAAD,KAAc;AAAEL,MAAAA,MAAM,EAAE,CAAC,CAACK,OAAO,CAACL,MAAR;AAAZ,KAAd;AALwB,GAAD,CAAlC;AAQA,sBACE;AACE,IAAA,GAAG,EAAEC,IADP;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,KAAK,EAAE;AACLK,MAAAA,eAAe,EAAEN,MAAM,GAAGR,MAAM,CAACe,IAAV,GAAiBf,MAAM,CAACgB,KAD1C;AAELC,MAAAA,MAAM,EAAEV,UAAU,GAAG,WAAH,GAAiB,IAF9B;AAGLW,MAAAA,MAAM,EAAG,aAAYlB,MAAM,CAACmB,KAAM;AAH7B,KAHT;AAAA,4BASE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,KAAK,EAAE;AACLL,QAAAA,eAAe,EAAEN,MAAM,GAAGR,MAAM,CAACoB,WAAV,GAAwBpB,MAAM,CAACe;AADjD,OAFT;AAAA,8BAME;AAAI,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAErB,MAAM,CAACgB;AAAhB,SAAX;AAAA,kBAAqCZ,IAAI,CAACkB;AAA1C;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,aAAb;AAA4BC,UAAAA,SAAS,EAAE;AAAvC,SAFT;AAGE,QAAA,OAAO,EAAGC,CAAD,IAAO;AACdA,UAAAA,CAAC,CAACC,cAAF;AACApB,UAAAA,WAAW,CAAC,IAAD,CAAX;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,EA2BGF,IAAI,CAACuB,KAAL,CAAWC,GAAX,CAAgBC,IAAD,iBACd,QAAC,IAAD;AAEE,MAAA,MAAM,EAAEA,IAAI,CAACC,EAFf;AAGE,MAAA,IAAI,EAAED,IAHR;AAIE,MAAA,SAAS,EAAExB,SAJb;AAKE,MAAA,QAAQ,EAAEF;AALZ,OACO0B,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,YADD,CA3BH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAvDD;;GAAM7B,W;UAQuBJ,O;;;KARvBI,W;AAyDN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { ITEM_TYPES } from \"../../constants/itemTypes\";\nimport Card from \"../card\";\nimport Colors from \"../../assets/colors\";\nimport \"../styles.css\";\n\nconst InnerColumn = ({\n  moveCard,\n  columnId,\n  data,\n  setDragId,\n  setCardMenu,\n  isDragging,\n}) => {\n  const [{ isOver }, drop] = useDrop({\n    accept: ITEM_TYPES.CARD,\n    drop: () => {\n      moveCard(columnId);\n    },\n    collect: (monitor) => ({ isOver: !!monitor.isOver() }),\n  });\n\n  return (\n    <div\n      ref={drop}\n      className=\"innerColumn\"\n      style={{\n        backgroundColor: isOver ? Colors.base : Colors.white,\n        filter: isDragging ? \"blur(1px)\" : null,\n        border: `1px solid ${Colors.light}`,\n      }}\n    >\n      <div\n        className=\"columnHeader\"\n        style={{\n          backgroundColor: isOver ? Colors.dark_accent : Colors.base,\n        }}\n      >\n        <h3 style={{ color: Colors.white }}>{data.title}</h3>\n        <button\n          className=\"addButton\"\n          style={{ transform: \"scale(0.75)\", marginTop: \"0.025rem\" }}\n          onClick={(e) => {\n            e.preventDefault();\n            setCardMenu(true);\n          }}\n        >\n          +\n        </button>\n      </div>\n      {data.cards.map((card) => (\n        <Card\n          key={card.id}\n          cardId={card.id}\n          data={card}\n          setDragId={setDragId}\n          columnId={columnId}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default InnerColumn;\n"]},"metadata":{},"sourceType":"module"}