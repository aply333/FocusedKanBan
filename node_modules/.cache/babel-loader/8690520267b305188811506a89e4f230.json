{"ast":null,"code":"import { actionTypes } from \"../actions/actionTypes\";\nimport { initialBoard } from \"./initialStore\";\n\nconst boardStore = (state = initialBoard, action) => {\n  switch (action.type) {\n    case actionTypes.GET_COMPLETE_BOARD_START:\n      return { ...state,\n        boardFetch: true,\n        boardError: \"\"\n      };\n\n    case actionTypes.GET_COMPLETE_BOARD_SUCCESS:\n      return { ...state,\n        boardFetch: false,\n        boardData: action.payload.board\n      };\n\n    case actionTypes.GET_COMPLETE_BOARD_FAIL:\n      return { ...state,\n        boardFetch: false,\n        boardError: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default boardStore;","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/FocusedKanban/src/redux/reducers/boardStore.js"],"names":["actionTypes","initialBoard","boardStore","state","action","type","GET_COMPLETE_BOARD_START","boardFetch","boardError","GET_COMPLETE_BOARD_SUCCESS","boardData","payload","board","GET_COMPLETE_BOARD_FAIL"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,WAAW,CAACM,wBAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF,SAAKR,WAAW,CAACS,0BAAjB;AACE,aAAO,EACL,GAAGN,KADE;AAELI,QAAAA,UAAU,EAAE,KAFP;AAGLG,QAAAA,SAAS,EAAEN,MAAM,CAACO,OAAP,CAAeC;AAHrB,OAAP;;AAKF,SAAKZ,WAAW,CAACa,uBAAjB;AACE,aAAO,EACL,GAAGV,KADE;AAELI,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,UAAU,EAAEJ,MAAM,CAACO;AAHd,OAAP;;AAKF;AACE,aAAOR,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,UAAf","sourcesContent":["import { actionTypes } from \"../actions/actionTypes\";\nimport { initialBoard } from \"./initialStore\";\n\nconst boardStore = (state = initialBoard, action) => {\n  switch (action.type) {\n    case actionTypes.GET_COMPLETE_BOARD_START:\n      return {\n        ...state,\n        boardFetch: true,\n        boardError: \"\",\n      };\n    case actionTypes.GET_COMPLETE_BOARD_SUCCESS:\n      return {\n        ...state,\n        boardFetch: false,\n        boardData: action.payload.board,\n      };\n    case actionTypes.GET_COMPLETE_BOARD_FAIL:\n      return {\n        ...state,\n        boardFetch: false,\n        boardError: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default boardStore;\n"]},"metadata":{},"sourceType":"module"}