{"ast":null,"code":"import { axiosAuth } from \"../../accountRoutes/components/auth/axiosAuth\";\nimport { actionTypes } from \"./actionTypes\";\nconst rootUrl = \"http://localhost:5000/\";\nconst backendTargert = \"focusedKanban\";\nexport const getCompleteBoard = board_id => dispatch => {\n  dispatch({\n    type: actionTypes.GET_COMPLETE_BOARD_START\n  });\n  axiosAuth().get(`${rootUrl}${backendTargert}/boards/completeBoard/${board_id}`).then(res => {\n    dispatch({\n      type: actionTypes.GET_COMPLETE_BOARD_SUCCESS,\n      payload: res.data\n    }).catch(err => {\n      dispatch({\n        type: actionTypes.GET_COMPLETE_BOARD_FAIL,\n        payload: err\n      });\n    });\n  });\n};","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/FocusedKanban/src/redux/actions/boardAction.js"],"names":["axiosAuth","actionTypes","rootUrl","backendTargert","getCompleteBoard","board_id","dispatch","type","GET_COMPLETE_BOARD_START","get","then","res","GET_COMPLETE_BOARD_SUCCESS","payload","data","catch","err","GET_COMPLETE_BOARD_FAIL"],"mappings":"AAAA,SAASA,SAAT,QAA0B,+CAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,MAAMC,OAAO,GAAG,wBAAhB;AACA,MAAMC,cAAc,GAAG,eAAvB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,QAAD,IAAeC,QAAD,IAAc;AAC1DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN,WAAW,CAACO;AAApB,GAAD,CAAR;AACAR,EAAAA,SAAS,GACNS,GADH,CACQ,GAAEP,OAAQ,GAAEC,cAAe,yBAAwBE,QAAS,EADpE,EAEGK,IAFH,CAESC,GAAD,IAAS;AACbL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,WAAW,CAACW,0BADX;AAEPC,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR,CAGGC,KAHH,CAGUC,GAAD,IAAS;AAChBV,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,WAAW,CAACgB,uBADX;AAEPJ,QAAAA,OAAO,EAAEG;AAFF,OAAD,CAAR;AAID,KARD;AASD,GAZH;AAaD,CAfM","sourcesContent":["import { axiosAuth } from \"../../accountRoutes/components/auth/axiosAuth\";\nimport { actionTypes } from \"./actionTypes\";\n\nconst rootUrl = \"http://localhost:5000/\";\nconst backendTargert = \"focusedKanban\";\n\nexport const getCompleteBoard = (board_id) => (dispatch) => {\n  dispatch({ type: actionTypes.GET_COMPLETE_BOARD_START });\n  axiosAuth()\n    .get(`${rootUrl}${backendTargert}/boards/completeBoard/${board_id}`)\n    .then((res) => {\n      dispatch({\n        type: actionTypes.GET_COMPLETE_BOARD_SUCCESS,\n        payload: res.data,\n      }).catch((err) => {\n        dispatch({\n          type: actionTypes.GET_COMPLETE_BOARD_FAIL,\n          payload: err,\n        });\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}