{"ast":null,"code":"var _jsxFileName = \"/Users/aply/Documents/SelfStudy/FocusedKanban/src/accountRoutes/dashboard/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport BoardCard from \"./boardcard\"; // import Nav from \"./nav\";\n\nimport { cardContainer } from \"./dashStyles\";\nimport { connect } from \"react-redux\";\nimport { getUserBoards } from \"../../redux/actions/dashActions\";\nimport NewBoard from \"./newBoard\";\nimport Settings from \"./settings\";\nimport Nav from \"../components/nav/nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard({\n  getUserBoards,\n  userId,\n  boards\n}) {\n  _s();\n\n  useEffect(() => {\n    getUserBoards(userId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      compA: /*#__PURE__*/_jsxDEV(NewBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this),\n      compB: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 45\n      }, this),\n      leftButton: \"+ board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: cardContainer.container,\n      children: boards.length > 0 ? boards.map(board => /*#__PURE__*/_jsxDEV(BoardCard, {\n        board: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 55\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\n\nconst mapStateToProps = state => {\n  return {\n    boards: state.dash.availableBoards,\n    userId: state.account.accountData.user_id,\n    isFetch: state.dash.dashFetch\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUserBoards\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/FocusedKanban/src/accountRoutes/dashboard/index.js"],"names":["React","useEffect","BoardCard","cardContainer","connect","getUserBoards","NewBoard","Settings","Nav","Dashboard","userId","boards","container","length","map","board","mapStateToProps","state","dash","availableBoards","account","accountData","user_id","isFetch","dashFetch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;;;AAGA,SAASC,SAAT,CAAmB;AAAEJ,EAAAA,aAAF;AAAiBK,EAAAA,MAAjB;AAAyBC,EAAAA;AAAzB,CAAnB,EAAqD;AAAA;;AACjDV,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,aAAa,CAACK,MAAD,CAAb;AACH,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACI;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,KAAK,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAAZ;AAAyB,MAAA,KAAK,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAAhC;AAA6C,MAAA,UAAU,EAAE;AAAzD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAEP,aAAa,CAACS,SAA1B;AAAA,gBACKD,MAAM,CAACE,MAAP,GAAc,CAAd,GAAiBF,MAAM,CAACG,GAAP,CAAWC,KAAK,iBAAI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAApB,CAAjB,GAAkE;AADvE;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AASH;;GAbQN,S;;KAAAA,S;;AAeT,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAM;AACFN,IAAAA,MAAM,EAAEM,KAAK,CAACC,IAAN,CAAWC,eADjB;AAEFT,IAAAA,MAAM,EAAEO,KAAK,CAACG,OAAN,CAAcC,WAAd,CAA0BC,OAFhC;AAGFC,IAAAA,OAAO,EAAEN,KAAK,CAACC,IAAN,CAAWM;AAHlB,GAAN;AAKH,CAND;;AAQA,eAAepB,OAAO,CAACY,eAAD,EAAkB;AAACX,EAAAA;AAAD,CAAlB,CAAP,CAA0CI,SAA1C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport BoardCard from \"./boardcard\";\n// import Nav from \"./nav\";\nimport { cardContainer } from \"./dashStyles\";\nimport { connect } from \"react-redux\";\nimport { getUserBoards } from \"../../redux/actions/dashActions\";\nimport NewBoard from \"./newBoard\";\nimport Settings from \"./settings\";\nimport Nav from \"../components/nav/nav\";\n\n\nfunction Dashboard({ getUserBoards, userId, boards }){\n    useEffect(()=>{\n        getUserBoards(userId)\n    },[])\n    return(\n        <>\n            <Nav compA={<NewBoard/>} compB={<Settings/>} leftButton={\"+ board\"}/>\n            <div style={cardContainer.container}>\n                {boards.length>0? boards.map(board => <BoardCard board={board}/>): null }                 \n            </div>\n\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return{\n        boards: state.dash.availableBoards,\n        userId: state.account.accountData.user_id,\n        isFetch: state.dash.dashFetch\n    }\n}\n\nexport default connect(mapStateToProps, {getUserBoards})(Dashboard)"]},"metadata":{},"sourceType":"module"}