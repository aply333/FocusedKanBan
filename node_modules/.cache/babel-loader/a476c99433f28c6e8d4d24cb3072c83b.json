{"ast":null,"code":"var _jsxFileName = \"/Users/aply/Documents/SelfStudy/FocusedKanban/src/accountRoutes/board/innerBoardComponents/card.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { connect } from \"react-redux\";\nimport Colors from \"../../../assets/colors\";\nimport { selectCard } from \"../../../redux/actions/boardAction\";\nimport { cardStyles } from \"../boardStyles\";\nimport { ITEM_TYPES } from \"../dnd/constants/itemTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  card,\n  selectCard\n}) {\n  _s();\n\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      type: ITEM_TYPES.CARD\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  const [hoverState, setHoverState] = useState(false);\n  const [containerStyles, setContainerStyles] = useState(cardStyles.container);\n  useEffect(() => {\n    if (hoverState) {\n      setContainerStyles({ ...cardStyles.container,\n        boxShadow: `4px 4px 12px ${Colors.offWhite}`\n      });\n    } else {\n      setContainerStyles(cardStyles.container);\n    }\n  }, [hoverState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: { ...containerStyles,\n      filter: isDragging ? \"blur(3px)\" : null\n    },\n    onMouseEnter: () => {\n      selectCard(card.card_id);\n      setHoverState(true);\n    },\n    onMouseLeave: () => {\n      setHoverState(false);\n    },\n    ref: drag,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: card.card_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: card.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        width: \"95%\",\n        margin: \"0.3rem auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"zHvX9G2JrkylnBWiaTD2UlDOj/4=\", false, function () {\n  return [useDrag];\n});\n\n_c = Card;\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {\n  selectCard\n})(Card);\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/FocusedKanban/src/accountRoutes/board/innerBoardComponents/card.jsx"],"names":["useEffect","useState","useDrag","connect","Colors","selectCard","cardStyles","ITEM_TYPES","Card","card","isDragging","drag","item","type","CARD","collect","monitor","hoverState","setHoverState","containerStyles","setContainerStyles","container","boxShadow","offWhite","filter","card_id","display","justifyContent","card_name","date","width","margin","description","mapStateToProps","state"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,UAAT,QAA2B,4BAA3B;;;AAGA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQJ,EAAAA;AAAR,CAAd,EAAoC;AAAA;;AAClC,QAAM,CAAC;AAAEK,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,IAAyBT,OAAO,CAAC;AACrCU,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAEN,UAAU,CAACO;AAAnB,KAD+B;AAErCC,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACrBN,MAAAA,UAAU,EAAE,CAAC,CAACM,OAAO,CAACN,UAAR;AADO,KAAd;AAF4B,GAAD,CAAtC;AAOA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACkB,eAAD,EAAkBC,kBAAlB,IAAwCnB,QAAQ,CAACK,UAAU,CAACe,SAAZ,CAAtD;AACArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,UAAJ,EAAgB;AACdG,MAAAA,kBAAkB,CAAC,EACjB,GAAGd,UAAU,CAACe,SADG;AAEjBC,QAAAA,SAAS,EAAG,gBAAelB,MAAM,CAACmB,QAAS;AAF1B,OAAD,CAAlB;AAID,KALD,MAKO;AACLH,MAAAA,kBAAkB,CAACd,UAAU,CAACe,SAAZ,CAAlB;AACD;AACF,GATQ,EASN,CAACJ,UAAD,CATM,CAAT;AAWA,sBACE;AACE,IAAA,KAAK,EAAE,EAAC,GAAGE,eAAJ;AACPK,MAAAA,MAAM,EAACd,UAAU,GAAC,WAAD,GAAa;AADvB,KADT;AAGE,IAAA,YAAY,EAAE,MAAM;AAClBL,MAAAA,UAAU,CAACI,IAAI,CAACgB,OAAN,CAAV;AACAP,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KANH;AAOE,IAAA,YAAY,EAAE,MAAM;AAClBA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KATH;AAUE,IAAA,GAAG,EAAEP,IAVP;AAAA,4BAYE;AAAM,MAAA,KAAK,EAAE;AAAEe,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAb;AAAA,8BACE;AAAA,kBAAKlB,IAAI,CAACmB;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAInB,IAAI,CAACoB;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAgBE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,MAAM,EAAE;AAAxB;AAAX;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE;AAAA,gBAAItB,IAAI,CAACuB;AAAT;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA1CQxB,I;UACwBN,O;;;KADxBM,I;;AA4CT,MAAMyB,eAAe,GAAGC,KAAK,IAAG;AAC9B,SAAM,EAAN;AAGD,CAJD;;AAMA,eAAe/B,OAAO,CAAC8B,eAAD,EAAiB;AAAC5B,EAAAA;AAAD,CAAjB,CAAP,CAAuCG,IAAvC,CAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { connect } from \"react-redux\";\nimport Colors from \"../../../assets/colors\";\nimport { selectCard } from \"../../../redux/actions/boardAction\";\nimport { cardStyles } from \"../boardStyles\";\nimport { ITEM_TYPES } from \"../dnd/constants/itemTypes\";\n\n\nfunction Card({ card, selectCard }) {\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ITEM_TYPES.CARD },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n  \n  const [hoverState, setHoverState] = useState(false);\n  const [containerStyles, setContainerStyles] = useState(cardStyles.container);\n  useEffect(() => {\n    if (hoverState) {\n      setContainerStyles({\n        ...cardStyles.container,\n        boxShadow: `4px 4px 12px ${Colors.offWhite}`,\n      });\n    } else {\n      setContainerStyles(cardStyles.container);\n    }\n  }, [hoverState]);\n\n  return (\n    <div\n      style={{...containerStyles,\n      filter:isDragging?\"blur(3px)\":null}}\n      onMouseEnter={() => {\n        selectCard(card.card_id)\n        setHoverState(true);\n      }}\n      onMouseLeave={() => {\n        setHoverState(false);\n      }}\n      ref={drag}\n    >\n      <span style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <h1>{card.card_name}</h1>\n        <p>{card.date}</p>\n      </span>\n      <hr style={{ width: \"95%\", margin: \"0.3rem auto\" }} />\n      <p>{card.description}</p>\n    </div>\n  );\n}\n\nconst mapStateToProps = state=> {\n  return{\n\n  }\n}\n\nexport default connect(mapStateToProps,{selectCard}) (Card);\n"]},"metadata":{},"sourceType":"module"}