{"ast":null,"code":"var _jsxFileName = \"/Users/aply/Documents/SelfStudy/FocusedKanban/src/accountRoutes/dashboard/boardcard.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { selectBoard } from \"../../redux/actions/dashActions\";\nimport { bcStyles } from \"./dashStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoardCard({\n  board,\n  selectBoard\n}) {\n  _s();\n\n  const [onOver, setOnOver] = useState(false);\n  const [hoverStyles, setHoverStyles] = useState({});\n\n  const handleHover = () => {\n    onOver === false ? setOnOver(true) : setOnOver(false);\n  };\n\n  const history = useHistory();\n  useEffect(() => {\n    if (onOver === false) {\n      setHoverStyles({});\n    } else {\n      setHoverStyles({\n        filter: \"drop-shadow(4px 4px 4px grey)\",\n        transform: \"translate(0.5rem, -0.5rem)\"\n      });\n    }\n  }, [onOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: { ...bcStyles.container,\n      ...hoverStyles\n    },\n    onMouseEnter: () => {\n      handleHover();\n    },\n    onMouseLeave: () => {\n      handleHover();\n    },\n    onClick: e => {\n      selectBoard(board.board_id);\n      history.push(\"/board\");\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: bcStyles.text,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: bcStyles.header,\n        children: board.board_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: board.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BoardCard, \"hSxoyDS4XbGp50xv42IkHvGUr8k=\", false, function () {\n  return [useHistory];\n});\n\n_c = BoardCard;\nexport default connect({\n  selectBoard\n})(BoardCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardCard\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/FocusedKanban/src/accountRoutes/dashboard/boardcard.jsx"],"names":["useEffect","useState","connect","useHistory","selectBoard","bcStyles","BoardCard","board","onOver","setOnOver","hoverStyles","setHoverStyles","handleHover","history","filter","transform","container","e","board_id","push","text","header","board_name","description"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,QAAT,QAAyB,cAAzB;;;AAEA,SAASC,SAAT,CAAmB;AAACC,EAAAA,KAAD;AAAQH,EAAAA;AAAR,CAAnB,EAAyC;AAAA;;AACvC,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMW,WAAW,GAAG,MAAM;AACxBJ,IAAAA,MAAM,KAAK,KAAX,GAAmBC,SAAS,CAAC,IAAD,CAA5B,GAAqCA,SAAS,CAAC,KAAD,CAA9C;AACD,GAFD;;AAIA,QAAMI,OAAO,GAAGV,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,MAAM,KAAK,KAAf,EAAsB;AACpBG,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KAFD,MAEO;AACLA,MAAAA,cAAc,CAAC;AACXG,QAAAA,MAAM,EAAE,+BADG;AAEXC,QAAAA,SAAS,EAAE;AAFA,OAAD,CAAd;AAID;AACF,GATQ,EASN,CAACP,MAAD,CATM,CAAT;AAUA,sBACE;AACE,IAAA,KAAK,EAAE,EAAE,GAAGH,QAAQ,CAACW,SAAd;AAAyB,SAAGN;AAA5B,KADT;AAEE,IAAA,YAAY,EAAE,MAAM;AAClBE,MAAAA,WAAW;AACZ,KAJH;AAKE,IAAA,YAAY,EAAE,MAAI;AAChBA,MAAAA,WAAW;AACZ,KAPH;AAQE,IAAA,OAAO,EAAIK,CAAC,IAAI;AACdb,MAAAA,WAAW,CAACG,KAAK,CAACW,QAAP,CAAX;AACAL,MAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACD,KAXH;AAAA,2BAaE;AAAK,MAAA,KAAK,EAAEd,QAAQ,CAACe,IAArB;AAAA,8BACE;AAAI,QAAA,KAAK,EAAEf,QAAQ,CAACgB,MAApB;AAAA,kBAA6Bd,KAAK,CAACe;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIf,KAAK,CAACgB;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAvCQjB,S;UAOSH,U;;;KAPTG,S;AAyCT,eAAeJ,OAAO,CAAC;AAACE,EAAAA;AAAD,CAAD,CAAP,CAAuBE,SAAvB,CAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { selectBoard } from \"../../redux/actions/dashActions\";\nimport { bcStyles } from \"./dashStyles\";\n\nfunction BoardCard({board, selectBoard}) {\n  const [onOver, setOnOver] = useState(false);\n  const [hoverStyles, setHoverStyles] = useState({});\n  const handleHover = () => {\n    onOver === false ? setOnOver(true) : setOnOver(false);\n  };\n\n  const history = useHistory()\n\n  useEffect(() => {\n    if (onOver === false) {\n      setHoverStyles({});\n    } else {\n      setHoverStyles({\n          filter: \"drop-shadow(4px 4px 4px grey)\",\n          transform: \"translate(0.5rem, -0.5rem)\"\n      });\n    }\n  }, [onOver]);\n  return (\n    <div\n      style={{ ...bcStyles.container, ...hoverStyles }}\n      onMouseEnter={() => {\n        handleHover();\n      }}\n      onMouseLeave={()=>{\n        handleHover()\n      }}\n      onClick = {e => {\n        selectBoard(board.board_id)\n        history.push(\"/board\")\n      }}\n    >\n      <div style={bcStyles.text} >\n        <h1 style={bcStyles.header}>{board.board_name}</h1>\n        <p>{board.description}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default connect({selectBoard})(BoardCard);\n"]},"metadata":{},"sourceType":"module"}