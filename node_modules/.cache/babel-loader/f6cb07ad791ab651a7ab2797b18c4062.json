{"ast":null,"code":"var _jsxFileName = \"/Users/aply/Documents/SelfStudy/FocusedKanban/src/accountRoutes/board/Board.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCompleteBoard } from \"../../redux/actions/boardAction\";\nimport { boardStyles } from \"./boardStyles\";\nimport Card from \"./innerBoardComponents/card\";\nimport Column from \"./innerBoardComponents/column\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board({\n  boardId,\n  boardData,\n  getCompleteBoard\n}) {\n  _s();\n\n  useEffect(() => {\n    getCompleteBoard(boardId);\n  }, []);\n  const [doneLoading, setDoneLoading] = useState(false);\n  useEffect(() => {\n    if (boardData.length > 0) {\n      setDoneLoading(true);\n    }\n  }, [boardData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: boardStyles.container,\n    children: doneLoading ? boardData.map(col => /*#__PURE__*/_jsxDEV(Column, {\n      title: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 44\n    }, this)) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"rWHV+5s7QMHJYdKkCii83lN+oLo=\");\n\n_c = Board;\n\nconst mapStateToProps = state => {\n  return {\n    boardId: state.dash.selectedBoard,\n    initBoard: state.board.boardData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCompleteBoard\n})(Board);\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/FocusedKanban/src/accountRoutes/board/Board.jsx"],"names":["useEffect","useState","connect","getCompleteBoard","boardStyles","Card","Column","Board","boardId","boardData","doneLoading","setDoneLoading","length","container","map","col","mapStateToProps","state","dash","selectedBoard","initBoard","board"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA,OAAD;AAASC,EAAAA,SAAT;AAAoBN,EAAAA;AAApB,CAAf,EAAsD;AAAA;;AACpDH,EAAAA,SAAS,CAAC,MAAI;AAEVG,IAAAA,gBAAgB,CAACK,OAAD,CAAhB;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGS,SAAS,CAACG,MAAV,GAAmB,CAAtB,EAAwB;AACpBD,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH;AACF,GAJQ,EAIN,CAACF,SAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,KAAK,EAAEL,WAAW,CAACS,SAAxB;AAAA,cACKH,WAAW,GAAED,SAAS,CAACK,GAAV,CAAcC,GAAG,iBAAI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YAArB,CAAF,GAAgD;AADhE;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA3CQR,K;;KAAAA,K;;AA6CT,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAM;AACFT,IAAAA,OAAO,EAAES,KAAK,CAACC,IAAN,CAAWC,aADlB;AAEFC,IAAAA,SAAS,EAAEH,KAAK,CAACI,KAAN,CAAYZ;AAFrB,GAAN;AAIH,CALD;;AAQA,eAAeP,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAA6CI,KAA7C,CAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCompleteBoard } from \"../../redux/actions/boardAction\";\nimport { boardStyles } from \"./boardStyles\";\nimport Card from \"./innerBoardComponents/card\";\nimport Column from \"./innerBoardComponents/column\";\n\nfunction Board({boardId,boardData, getCompleteBoard}) {\n  useEffect(()=>{\n     \n      getCompleteBoard(boardId)\n  }, [])\n\n  const [doneLoading, setDoneLoading] = useState(false)\n  useEffect(() => {\n    if(boardData.length > 0){\n        setDoneLoading(true)\n    }\n  }, [boardData])\n\n  return (\n    <div style={boardStyles.container}>\n        {doneLoading? boardData.map(col => <Column title=\"test\"/>) :null}\n      {/* <Column title={\"Test Title\"}>\n        <Card />\n        <Card />\n        <Card />\n        <Card />\n        <Card />\n      </Column>\n      <Column title={\"Test Title\"}>\n        <Card />\n        <Card />\n        <Card />\n      </Column>\n      <Column title={\"Test Title\"}></Column>\n      <Column title={\"Test Title\"}>\n        <Card />\n      </Column>\n      <Column title={\"Test Title\"}>\n        <Card />\n      </Column>\n      <Column title={\"Test Title\"}>\n        <Card />\n      </Column>\n      <Column title={\"Test Title\"}>\n        <Card />\n      </Column> */}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n    return{\n        boardId: state.dash.selectedBoard,\n        initBoard: state.board.boardData\n    }\n}\n\n\nexport default connect(mapStateToProps, {getCompleteBoard})(Board);\n"]},"metadata":{},"sourceType":"module"}