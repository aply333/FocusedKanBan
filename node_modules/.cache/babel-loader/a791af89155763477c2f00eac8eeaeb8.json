{"ast":null,"code":"var _jsxFileName = \"/Users/aply/Documents/SelfStudy/FocusedKanban/src/accountRoutes/board/innerBoardComponents/column.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Colors from \"../../../assets/colors\";\nimport { boardStyles } from \"../boardStyles\";\nimport Card from \"./card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Column({\n  title,\n  cards\n}) {\n  _s();\n\n  const [hoverState, setHoverState] = useState(false);\n  const [containerStyle, setContainerStyle] = useState(boardStyles.column.container);\n  useEffect(() => {\n    if (hoverState) {\n      setContainerStyle({ ...boardStyles.column.container,\n        boxShadow: `4px 4px 12px ${Colors.offWhite}`,\n        backgroundColor: Colors.offWhite\n      });\n    } else {\n      setContainerStyle(boardStyles.column.container);\n    }\n  }, [hoverState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: boardStyles.column.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: boardStyles.column.header,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: boardStyles.column.cardContainer,\n      children: cards.length > 0 ? cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 31\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Column, \"mmWO7Z+BpeMStWGtkp6Yl3tlbjo=\");\n\n_c = Column;\nexport default Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"sources":["/Users/aply/Documents/SelfStudy/FocusedKanban/src/accountRoutes/board/innerBoardComponents/column.jsx"],"names":["useEffect","useState","Colors","boardStyles","Card","Column","title","cards","hoverState","setHoverState","containerStyle","setContainerStyle","column","container","boxShadow","offWhite","backgroundColor","header","cardContainer","length","map","card"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAhB,EAAkC;AAAA;;AAC9B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAqCV,QAAQ,CAACE,WAAW,CAACS,MAAZ,CAAmBC,SAApB,CAAnD;AACAb,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGQ,UAAH,EAAc;AACVG,MAAAA,iBAAiB,CAAC,EAAC,GAAGR,WAAW,CAACS,MAAZ,CAAmBC,SAAvB;AACdC,QAAAA,SAAS,EAAG,gBAAeZ,MAAM,CAACa,QAAS,EAD7B;AAEdC,QAAAA,eAAe,EAAEd,MAAM,CAACa;AAFV,OAAD,CAAjB;AAIH,KALD,MAKK;AACDJ,MAAAA,iBAAiB,CAACR,WAAW,CAACS,MAAZ,CAAmBC,SAApB,CAAjB;AACH;AACJ,GATQ,EASN,CAACL,UAAD,CATM,CAAT;AAUF,sBACE;AAAK,IAAA,KAAK,EAAEL,WAAW,CAACS,MAAZ,CAAmBC,SAA/B;AAAA,4BACE;AAAI,MAAA,KAAK,EAAEV,WAAW,CAACS,MAAZ,CAAmBK,MAA9B;AAAA,gBAAuCX;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAEH,WAAW,CAACS,MAAZ,CAAmBM,aAA/B;AAAA,gBACKX,KAAK,CAACY,MAAN,GAAa,CAAb,GACCZ,KAAK,CAACa,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAlB,CADD,GAEA;AAHL;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAvBQhB,M;;KAAAA,M;AAyBT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Colors from \"../../../assets/colors\";\nimport { boardStyles } from \"../boardStyles\";\nimport Card from \"./card\";\n\nfunction Column({ title, cards }) {\n    const [hoverState, setHoverState] = useState(false)\n    const [containerStyle, setContainerStyle]= useState(boardStyles.column.container)\n    useEffect(()=>{\n        if(hoverState){\n            setContainerStyle({...boardStyles.column.container,\n                boxShadow: `4px 4px 12px ${Colors.offWhite}`,\n                backgroundColor: Colors.offWhite\n            })\n        }else{\n            setContainerStyle(boardStyles.column.container)\n        }\n    }, [hoverState])\n  return (\n    <div style={boardStyles.column.container}>\n      <h1 style={boardStyles.column.header}>{title}</h1>\n      <div style={boardStyles.column.cardContainer}>\n          {cards.length>0?\n            cards.map(card => <Card card={card}/>)\n          :null}\n      </div>\n    </div>\n  );\n}\n\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}